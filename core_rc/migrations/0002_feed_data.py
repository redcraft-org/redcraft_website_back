# Generated by Django 3.1.7 on 2021-08-08 18:57

from django.db import migrations
from core_rc.models import Language as LanguageModel


def create_languages(Language):
    language_data = (
        ('BG', 'Bulgarian'),
        ('CS', 'Czech'),
        ('DA', 'Danish'),
        ('DE', 'German'),
        ('EL', 'Greek'),
        ('EN', 'English'),
        ('ES', 'Spanish'),
        ('ET', 'Estonian'),
        ('FI', 'Finnish'),
        ('FR', 'French'),
        ('HU', 'Hungarian'),
        ('IT', 'Italian'),
        ('JA', 'Japanese'),
        ('LT', 'Lithuanian'),
        ('LV', 'Latvian'),
        ('NL', 'Dutch'),
        ('PL', 'Polish'),
        ('PT', 'Portuguese'),
        ('RO', 'Romanian'),
        ('RU', 'Russian'),
        ('SK', 'Slovak'),
        ('SL', 'Slovenian'),
        ('SV', 'Swedish'),
        ('ZH', 'Chinese'),
    )

    languages = {}
    for language_code, language_name in language_data:
        languages[language_code] = Language.objects.create(
            code=language_code,
            name=language_name
        )
        languages[language_code].save()
    return languages

def create_articles_languages(ArticleLanguage, languages):
    article_language_fr = ArticleLanguage.objects.create(
        language=languages['FR']
    )
    article_language_en = ArticleLanguage.objects.create(
        language=languages['EN']
    )

    article_language_fr.save()
    article_language_en.save()

    return {
        'FR': article_language_fr,
        'EN': article_language_en,
    }

def create_category(Category):
    category_redstone = Category.objects.create(code='redstone')
    category_bluid = Category.objects.create(code='build')
    category_news = Category.objects.create(code='news')

    category_redstone.save()
    category_bluid.save()
    category_news.save()

    return {
        'redstone':category_redstone,
        'build':category_bluid,
        'news':category_news,
    }

def create_localized_categorys(LocalizedCategory, articles_languages, categorys):
    def save_obj(category, language, name):
        LocalizedCategory.objects.create(name=name, language=language, category=category).save()

    save_obj(categorys['redstone'], articles_languages['FR'], 'Redstone')
    save_obj(categorys['redstone'], articles_languages['EN'], 'Redstone')
    save_obj(categorys['build'], articles_languages['FR'], 'Construction')
    save_obj(categorys['build'], articles_languages['EN'], 'Build')
    save_obj(categorys['news'], articles_languages['FR'], 'Nouvelles')
    save_obj(categorys['news'], articles_languages['EN'], 'News')

def init_data(apps, schema_editor):
    # Get models
    Language = apps.get_model('core_rc', 'Language')
    ArticleLanguage = apps.get_model('core_rc', 'ArticleLanguage')
    Category = apps.get_model('core_rc', 'Category')
    LocalizedCategory = apps.get_model('core_rc', 'LocalizedCategory')

    languages = create_languages(Language)
    articles_languages = create_articles_languages(ArticleLanguage, languages)
    categorys = create_category(Category)
    create_localized_categorys(LocalizedCategory, articles_languages, categorys)

class Migration(migrations.Migration):

    dependencies = [
        ('core_rc', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(init_data),
    ]
